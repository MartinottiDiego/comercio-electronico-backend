version: '3.8'

services:
  strapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mi-nuevo-backend-strapi
    restart: unless-stopped
    ports:
      - "${PORT:-1337}:${PORT:-1337}"
    environment:
      # Server Configuration
      NODE_ENV: ${NODE_ENV:-development}
      HOST: ${HOST:-0.0.0.0}
      PORT: ${PORT:-1337}
      
      # Database Configuration - PostgreSQL
      DATABASE_CLIENT: ${DATABASE_CLIENT:-postgres}
      DATABASE_HOST: ${DATABASE_HOST:-host.docker.internal}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: ${DATABASE_SSL:-false}
      
      # Secrets
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      
      # Stripe Configuration
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    
    volumes:
      # Volúmenes para desarrollo con hot-reload
      - ./src:/opt/app/src:rw
      - ./config:/opt/app/config:rw
      - ./public:/opt/app/public:rw
      - ./types:/opt/app/types:rw
      - ./scripts:/opt/app/scripts:rw
      # Persistir uploads y cache
      - strapi_uploads:/opt/app/public/uploads
      - strapi_cache:/opt/app/.strapi
      # Excluir node_modules para mejor rendimiento
      - /opt/app/node_modules
    
    networks:
      - strapi-network
    
    # Dependencias de salud
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Configuración adicional para desarrollo
    stdin_open: true
    tty: true

# Volúmenes nombrados para persistencia
volumes:
  strapi_uploads:
  strapi_cache:

# Red personalizada
networks:
  strapi-network:
    driver: bridge